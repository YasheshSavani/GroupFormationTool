<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.csci5308.groupme.instructor.controller.InstructorControllerTest" tests="5" skipped="0" failures="0" errors="0" timestamp="2020-06-05T00:42:23" hostname="YASHESH" time="1.404">
  <properties/>
  <testcase name="showCourseAdminPage()" classname="com.csci5308.groupme.instructor.controller.InstructorControllerTest" time="0.032"/>
  <testcase name="instructorHomePageTest()" classname="com.csci5308.groupme.instructor.controller.InstructorControllerTest" time="0.139"/>
  <testcase name="instructorTAHomePageTest()" classname="com.csci5308.groupme.instructor.controller.InstructorControllerTest" time="0.116"/>
  <testcase name="instructorStudentHomePageTest()" classname="com.csci5308.groupme.instructor.controller.InstructorControllerTest" time="0.116"/>
  <testcase name="InstructorTAStudentTest()" classname="com.csci5308.groupme.instructor.controller.InstructorControllerTest" time="0.998"/>
  <system-out><![CDATA[2020-06-04 21:42:23.193  INFO 25544 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.csci5308.groupme.instructor.controller.InstructorControllerTest], using SpringBootContextLoader
2020-06-04 21:42:23.193  INFO 25544 --- [    Test worker] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [com.csci5308.groupme.instructor.controller.InstructorControllerTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-06-04 21:42:23.193  INFO 25544 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.csci5308.groupme.instructor.controller.InstructorControllerTest]: InstructorControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-06-04 21:42:23.263  INFO 25544 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.csci5308.groupme.GroupmeApplication for test class com.csci5308.groupme.instructor.controller.InstructorControllerTest
2020-06-04 21:42:23.267  INFO 25544 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-06-04 21:42:23.270  INFO 25544 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@402e182e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@301a2ecf, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@25aee773, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@43d796c5, org.springframework.test.context.support.DirtiesContextTestExecutionListener@730819f9, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@12852d01, org.springframework.test.context.event.EventPublishingTestExecutionListener@40c2d55d, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@3f5c023e, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@ca803fd, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@37feda4c, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@61c089d3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3ed23a27, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@72a961eb, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3344e948]

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /courseoperation
       Parameters = {courseCode=[CSCI5308]}
          Headers = []
             Body = null
    Session Attrs = {SPRING_SECURITY_CONTEXT=org.springframework.security.core.context.SecurityContextImpl@d5b20bd7: Authentication: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@d5b20bd7: Principal: org.springframework.security.core.userdetails.User@2903b382: Username: admin_test; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ROLE_ADMIN; Credentials: [PROTECTED]; Authenticated: true; Details: null; Granted Authorities: ROLE_ADMIN}

Handler:
             Type = com.csci5308.groupme.instructor.controller.InstructorController
           Method = com.csci5308.groupme.instructor.controller.InstructorController#showCourseAdminPage(String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = operationoncourse
             View = null
        Attribute = courseCode
            value = CSCI5308

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <link
            rel="stylesheet"
            href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"
            integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm"
            crossorigin="anonymous"
    />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Course Admin Page</title>

    <script type="text/javascript">

        function showCsvImportDiv() {
            document.getElementById('div_get_data').style.display = 'none';
            if (document.getElementById('import_csv_form').style.display == 'none') {
                document.getElementById('import_csv_form').style.display = 'block';
            }
        }

        function showAddTADiv() {
            document.getElementById('import_csv_form').style.display = 'none';
            if (document.getElementById('div_get_data').style.display == 'none') {
                document.getElementById('div_get_data').style.display = 'block';
            }

        }
    </script>

    <style>
        .form {
            text-align: center;
            border: black;
            border-radius: 3px;
            padding: 50px;
            margin: 0 auto;
            margin-top: 100px;
        }

        .text-box {
            width: 300px;
            display: inline-block;
        }
    </style>
</head>
<body>

<div id="buttons" style="text-align: center; display: block; ">
    <table>
        <tr>
            <td>
                <button name="importcsv" onclick="showCsvImportDiv()">Import CSV</button>
            </td>
            <td>
                <button name="addta" onclick="showAddTADiv()">Add TA</button>
            </td>
        </tr>
    </table>
</div>
<div id="import_csv_form" style="display: none; margin: auto 0; text-align: center">
    <form action="/uploadfile" method="post" enctype="multipart/form-data">
        <input type="file" id="file" name="file"/>
        <br>
        <input type="submit"/>
    </form>
</div>

<div id="div_get_data" style="text-align: center; display: none;">
    <h3>Select TA from Existing User for Course</h3>
    <form name="form_get_data" class="form" action="/courseoperation?courseCode=CSCI5308" method="POST"
          style="text-align: center;">
        <table>
            <tr>
                <th colspan="2" style="text-align: center">
                    Assign TA to the Course
                </th>
            </tr>
            <tr>
                <td><label for="email">Email</label></td>
                <td>
                    <input type="email" name="email" id="email" placeholder="Enter Email" required>
                </td>
            </tr>
            <!--            <tr>-->
            <!--                <td><label for="courseCode">Course Code</label></td>-->
            <!--                <td>-->
            <!--                    <input type="text" th:name="courseCode" id="courseCode" placeholder="Enter Course Code" required>-->
            <!--                </td>-->
            <!--            </tr>-->
            <tr>
                <td>
                    <button type="submit">Submit</button>
                </td>
            </tr>
        </table>
    </form>
</div>



</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /InstructorTAStudent/Instructor
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {SPRING_SECURITY_CONTEXT=org.springframework.security.core.context.SecurityContextImpl@f741ce01: Authentication: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@f741ce01: Principal: org.springframework.security.core.userdetails.User@bade5474: Username: testuser1; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ROLE_INSTRUCTOR; Credentials: [PROTECTED]; Authenticated: true; Details: null; Granted Authorities: ROLE_INSTRUCTOR}

Handler:
             Type = com.csci5308.groupme.instructor.controller.InstructorController
           Method = com.csci5308.groupme.instructor.controller.InstructorController#instructorHomePage(Principal, Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = CourseAdmin
             View = null
        Attribute = courses
            value = []

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Course Admin Page</title>
</head>
<body>
<table>
    <tr>
        <th>Course Code</th>
        <th>Course Name</th>
        <th>Course CRN</th>
    </tr>
    
</table>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /InstructorTAStudent/InstructorTA
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {SPRING_SECURITY_CONTEXT=org.springframework.security.core.context.SecurityContextImpl@85acd0cb: Authentication: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@85acd0cb: Principal: org.springframework.security.core.userdetails.User@6924de1: Username: test3; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ROLE_INSTRUCTOR,ROLE_TA; Credentials: [PROTECTED]; Authenticated: true; Details: null; Granted Authorities: ROLE_INSTRUCTOR, ROLE_TA}

Handler:
             Type = com.csci5308.groupme.instructor.controller.InstructorController
           Method = com.csci5308.groupme.instructor.controller.InstructorController#instructorTAHomePage(Principal, Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = CourseAdmin
             View = null
        Attribute = courses
            value = [com.csci5308.groupme.course.model.Course@49a187bf]

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Course Admin Page</title>
</head>
<body>
<table>
    <tr>
        <th>Course Code</th>
        <th>Course Name</th>
        <th>Course CRN</th>
    </tr>
    <tr>
        <td>industry</td>
        <td>csci9890</td>
        <td>9890</td>
        <td>
            <form method="get" action="/InstructorTAStudent/CourseAdmin/Course">
                <input type="hidden" name="courseCode" value="csci9890">
                <input type="hidden" name="courseName" value="industry">
                <input type="hidden" name="courseCrn" value="9890">
                <button type="submit">Go To Course</button>
            </form>
        </td>
    </tr>
</table>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
2020-06-04 21:42:23.573  INFO 25544 --- [    Test worker] c.c.groupme.course.dao.CourseDAOImpl     : Connecting to the selected database...
2020-06-04 21:42:23.674  INFO 25544 --- [    Test worker] c.c.groupme.course.dao.CourseDAOImpl     : Connected to the database successfully...
2020-06-04 21:42:23.681  INFO 25544 --- [    Test worker] c.c.groupme.course.dao.CourseDAOImpl     : Connection to database Closed...

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /InstructorTAStudent/InstructorStudent
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {SPRING_SECURITY_CONTEXT=org.springframework.security.core.context.SecurityContextImpl@da529953: Authentication: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@da529953: Principal: org.springframework.security.core.userdetails.User@bade5474: Username: testuser1; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ROLE_INSTRUCTOR,ROLE_STUDENT; Credentials: [PROTECTED]; Authenticated: true; Details: null; Granted Authorities: ROLE_INSTRUCTOR, ROLE_STUDENT}

Handler:
             Type = com.csci5308.groupme.instructor.controller.InstructorController
           Method = com.csci5308.groupme.instructor.controller.InstructorController#instructorStudentHomePage(Principal, Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = InstructorTAStudent
             View = null
        Attribute = courses
            value = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Instructor Courses</title>
</head>
<body>
<h1>List of courses you are enrolled in as student</h1>
<button onclick="location.href = '/InstructorTAStudent/CourseAdmin';" id="courseadmin">Course Admin</button>
<table>
    <tr>
        <th>Course Code</th>
        <th>Course Name</th>
        <th>Course CRN</th>
    </tr>
    
</table>
</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
2020-06-04 21:42:23.691  INFO 25544 --- [    Test worker] c.c.groupme.course.dao.CourseDAOImpl     : Connecting to the selected database...
2020-06-04 21:42:23.843  INFO 25544 --- [    Test worker] c.c.groupme.course.dao.CourseDAOImpl     : Connected to the database successfully...
2020-06-04 21:42:24.167  INFO 25544 --- [    Test worker] c.c.groupme.course.dao.CourseDAOImpl     : Connection to database Closed...
2020-06-04 21:42:24.343  INFO 25544 --- [    Test worker] c.c.groupme.course.dao.CourseDAOImpl     : Connection to database Closed...
2020-06-04 21:42:24.548  INFO 25544 --- [    Test worker] c.c.groupme.course.dao.CourseDAOImpl     : Connection to database Closed...
2020-06-04 21:42:24.648  INFO 25544 --- [    Test worker] c.c.groupme.course.dao.CourseDAOImpl     : Connection to database Closed...
2020-06-04 21:42:24.650  INFO 25544 --- [    Test worker] c.c.groupme.course.dao.CourseDAOImpl     : Connection to database Closed...

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /InstructorTAStudent
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {SPRING_SECURITY_CONTEXT=org.springframework.security.core.context.SecurityContextImpl@a68f0384: Authentication: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@a68f0384: Principal: org.springframework.security.core.userdetails.User@bade5475: Username: testuser2; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ROLE_INSTRUCTOR,ROLE_STUDENT,ROLE_TA; Credentials: [PROTECTED]; Authenticated: true; Details: null; Granted Authorities: ROLE_INSTRUCTOR, ROLE_STUDENT, ROLE_TA}

Handler:
             Type = com.csci5308.groupme.instructor.controller.InstructorController
           Method = com.csci5308.groupme.instructor.controller.InstructorController#instructorTAStudentHomePage(Principal, Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = InstructorTAStudent
             View = null
        Attribute = courses
            value = [com.csci5308.groupme.course.model.Course@4c2eb55a, com.csci5308.groupme.course.model.Course@2e2d563d, com.csci5308.groupme.course.model.Course@2c28116b, com.csci5308.groupme.course.model.Course@49972410]

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Instructor Courses</title>
</head>
<body>
<h1>List of courses you are enrolled in as student</h1>
<button onclick="location.href = '/InstructorTAStudent/CourseAdmin';" id="courseadmin">Course Admin</button>
<table>
    <tr>
        <th>Course Code</th>
        <th>Course Name</th>
        <th>Course CRN</th>
    </tr>
    <tr>
        <td>data management</td>
        <td>csci0003</td>
        <td>789</td>
        <td>
            <form method="get" action="/InstructorTAStudent/CourseAdmin">
                <input type="hidden" name="courseCode" value="csci0003">
                <input type="hidden" name="courseName" value="csci0003">
                <input type="hidden" name="courseCrn" value="789">
                <button type="submit">Go To Course</button>
            </form>
        </td>
    </tr>
    <tr>
        <td>web</td>
        <td>csci0010</td>
        <td>8920</td>
        <td>
            <form method="get" action="/InstructorTAStudent/CourseAdmin">
                <input type="hidden" name="courseCode" value="csci0010">
                <input type="hidden" name="courseName" value="csci0010">
                <input type="hidden" name="courseCrn" value="8920">
                <button type="submit">Go To Course</button>
            </form>
        </td>
    </tr>
    <tr>
        <td>cloud</td>
        <td>csci0014</td>
        <td>8910</td>
        <td>
            <form method="get" action="/InstructorTAStudent/CourseAdmin">
                <input type="hidden" name="courseCode" value="csci0014">
                <input type="hidden" name="courseName" value="csci0014">
                <input type="hidden" name="courseCrn" value="8910">
                <button type="submit">Go To Course</button>
            </form>
        </td>
    </tr>
    <tr>
        <td>mobile computing</td>
        <td>csci0002</td>
        <td>456</td>
        <td>
            <form method="get" action="/InstructorTAStudent/CourseAdmin">
                <input type="hidden" name="courseCode" value="csci0002">
                <input type="hidden" name="courseName" value="csci0002">
                <input type="hidden" name="courseCrn" value="456">
                <button type="submit">Go To Course</button>
            </form>
        </td>
    </tr>
</table>
</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
